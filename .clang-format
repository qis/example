# Clang-Format Configuration
---
BasedOnStyle: LLVM

# Indent
IndentWidth: 2
ConstructorInitializerIndentWidth: 2
ContinuationIndentWidth: 2
IndentCaseBlocks: false
IndentExternBlock: false
IndentGotoLabels: true
IndentPPDirectives: AfterHash
NamespaceIndentation: None

# Alignment
AlignAfterOpenBracket: AlwaysBreak
AlignEscapedNewlines: Left
AlignOperands: DontAlign
PointerAlignment: Left

# Breaks
AllowAllArgumentsOnNextLine: true
AllowAllConstructorInitializersOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: Never
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: Empty
AllowShortLoopsOnASingleLine: false
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes
BinPackArguments: false
BinPackParameters: false
BraceWrapping:
  AfterCaseLabel: true
  AfterClass: true
  AfterControlStatement: Always
  AfterEnum: true
  AfterFunction: true
  AfterNamespace: false
  AfterStruct: true
  AfterUnion: true
  AfterExternBlock: false
  BeforeCatch: true
  BeforeElse: true
  BeforeLambdaBody: true
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false
BreakBeforeBraces: Custom
BreakBeforeBinaryOperators: None
BreakBeforeTernaryOperators: false
BreakConstructorInitializers: BeforeColon
BreakInheritanceList: AfterColon
BreakStringLiterals: false
CompactNamespaces: false
ConstructorInitializerAllOnOneLineOrOnePerLine: true
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 2

# Spaces
Cpp11BracedListStyle: false
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: true
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Columns
ColumnLimit: 100
PenaltyBreakAssignment: 100
PenaltyBreakBeforeFirstCallParameter: 10
PenaltyBreakComment: 100
PenaltyBreakFirstLessLess: 100
PenaltyBreakString: 1000
PenaltyExcessCharacter: 10
PenaltyReturnTypeOnItsOwnLine: 10000

# Comments
ReflowComments: false
FixNamespaceComments: true
SpacesBeforeTrailingComments: 2
CommentPragmas: '^ (NOTE|TODO):'

# Sorting
SortUsingDeclarations: false

# Line Endings
DeriveLineEnding: false
UseCRLF: false
---
Language: Cpp
Standard: Latest

# Includes
SortIncludes: true
IncludeBlocks: Preserve
IncludeCategories:
    # Relative Paths
  - Regex: '^"'
    Priority: 1

    # Project Config
  - Regex: '^<application/config.hpp>$'
    Priority: 2

    # Project Headers
  - Regex: '^<application/'
    Priority: 3

    # Windows Headers
  - Regex: '^<(ntifs|windows)\.h>$'
    Priority: 4

    # System Headers
  - Regex: '^<(wdf|shellapi|winsock2|ws2tcpip|mswsock)\.h>$'
    Priority: 5

    # Library Headers
  - Regex: '^<.*\.'
    Priority: 6

    # C Compatibility Headers
  - Regex: '^<c(a|c|e|f|i|l|m|s|t|u|w)'
    Priority: 8

    # C++ Standard Library Headers
  - Regex: '^<'
    Priority: 7

# Sources: a.hpp is main include for a.cpp, a_test.cpp, etc.
IncludeIsMainRegex: '(_test|_windows|_linux|_posix)?$'

# Headers: a.hpp, a_base.hpp, etc. are main includes for a.cpp
IncludeIsMainSourceRegex: '(_base|_impl)?$'

# Macros
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH

MacroBlockBegin: '^BEGIN_(MSG_MAP|MSG_MAP_EX|UPDATE_UI_MAP)'
MacroBlockEnd: '^END_(MSG_MAP|UPDATE_UI_MAP)'

StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
---
Language: ObjC
DisableFormat: true
---
Language: Java
BreakAfterJavaFieldAnnotations: true
---
Language: JavaScript
JavaScriptQuotes: Double
JavaScriptWrapImports: true
...
